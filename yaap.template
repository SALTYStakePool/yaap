---
AWSTemplateFormatVersion: 2010-09-09
Description: 'YAAP - Deploy PlutusPlayground in an accessible and frugal fashion'
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: "Instance Configuration"
        Parameters: 
          - pInstanceType
          - pKeyPair
          - pLatestAmiId
      - Label: 
          default: "Access"
        Parameters: 
          - pAccessCidr
    ParameterLabels: 
      pLatestAmiId: 
        default: "Image"
      pKeyPair: 
        default: "KeyPair"
      pInstanceType: 
        default: "Instance Type"
      pAccessCidr: 
        default: "Access From (CIDR)"

Parameters:
  pLatestAmiId:
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    Description: "Base image to be used (if unsure, stick with the default)"
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
  pKeyPair:
    Default: ""
    Description: "SSH Key Pair for access to the instance, if required"
    # Can't use AWS type with empty value Type: "AWS::EC2::KeyPair::KeyName"
    Type: String
  pInstanceType:
    AllowedValues: ["t3a.small", "t3a.medium", "t3a.large", "t3.small", "t3.medium", "t3.large", "c5a.large"]
    Default: "t3a.medium"
    Description: "Instance type to be used"
    Type: "String"
  pAccessCidr:
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})$"
    Default: "0.0.0.0/0"
    Description: "IP range to allow access, please apply caution"
    Type: "String"

Conditions:
  cKeyProvided: !Equals [!Ref pKeyPair, ""]

Resources:
  rEC2Plutus: 
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT25M
    Metadata: 
      AWS::CloudFormation::Init:
        config:
          files:
            "/opt/scripts/prep_plutus.sh":
              content: !Sub |
                #!/bin/bash

                # Dependencies et al
                sudo yum install -y gmp-devel ncurses-compat-libs libtool ncurses-devel
                sudo amazon-linux-extras install -y R4

                # Setup NiX
                sudo chown -R ec2-user /nix
                bash <(curl -L https://nixos.org/nix/install)
                nix-env -iA cachix -f https://cachix.org/api/v1/install
                . /home/ec2-user/.nix-profile/etc/profile.d/nix.sh
                cachix use iohk

                # Plutus
                sudo mkdir /opt/plutus
                sudo chown ec2-user:ec2-user /opt/plutus
                cd /opt
                git clone https://github.com/input-output-hk/plutus.git

                # Adding IOHK Cache
                mkdir -p ~/.config/nix
                echo "substituters        = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/" >> ~/.config/nix/nix.conf
                echo "trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=" >> ~/.config/nix/nix.conf

                # Time to build
                cd /opt/plutus
                nix build -f default.nix plutus.haskell.packages.plutus-core.components.library
                nix-build -A plutus-playground.server # Allows us to just run later

                # Modifying WebPack to make it publicly accessible and not fully required but private IP rather than localhost
                MY_IP=$(curl --silent -q http://169.254.169.254/latest/meta-data/local-ipv4)
                sed -i 's/https: true,/https: false,\n        host: "0.0.0.0",/' /opt/plutus/plutus-playground-client/webpack.config.js
                sed -i 's/localhost/'$MY_IP'/' /opt/plutus/plutus-playground-client/default.nix

                # Start time
                cd /opt/plutus/
                export WEBGHC_URL=http://$MY_IP:8080
                export LC_ALL=C
                export LANG=en_US.UTF-8

                nix-shell --run "cd /opt/plutus/plutus-playground-client/ && plutus-playground-server webserver &"
                nix-shell --run "cd /opt/plutus/plutus-playground-client/ && npm run start &"
                
                # Report
                /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource rEC2Plutus --region ${AWS::Region}

              group: ec2-user
              owner: ec2-user
              mode: '000755'
          commands: 
            plutus-config: 
              command: "su -c /opt/scripts/prep_plutus.sh ec2-user"
    Properties: 
      ImageId: !Ref pLatestAmiId
      InstanceType: !Ref pInstanceType
      KeyName: !If [ cKeyProvided, !Ref pKeyPair, !Ref "AWS::NoValue" ]
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: 'true'
            Encrypted: 'true'
            VolumeType: gp2
            VolumeSize: '30'
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'True'
          DeleteOnTermination: 'True'
          DeviceIndex: '0'
          GroupSet:
            - !GetAtt rSecurityGroupPlutus.GroupId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          # Basics
          yum install -y git gcc
          
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource rEC2Plutus --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource rEC2Plutus --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: PlutusPlayground
  rSecurityGroupPlutus:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow access to Plutus Playground instance
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8009
          ToPort: 8009
          CidrIp: !Ref pAccessCidr
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref pAccessCidr

Outputs:
  oPlaygroundUrl:
    Value: !Sub "http://${rEC2Plutus.PublicIp}:8009/"
    Description: "Playground URL, go build"
  oInstancePublicIp:
    Value: !GetAtt rEC2Plutus.PublicIp
    Description: "Your Plutus instance public IP address, enjoy"
